package com.smk.business.netty.client;

import com.alibaba.fastjson.JSON;
import com.smk.common.netty.constant.NettyConstant;
import com.smk.common.netty.message.HeartbeatRequestPacket;
import com.smk.common.netty.message.ResponseMsgPacket;
import com.smk.common.netty.util.FastJsonSerializer;
import com.smk.common.vo.BaseResult;
import io.netty.buffer.ByteBuf;
import io.netty.channel.ChannelHandlerContext;
import io.netty.channel.SimpleChannelInboundHandler;
import io.netty.handler.timeout.IdleStateEvent;
import lombok.extern.slf4j.Slf4j;

/**
 * @Description:
 * @Project: finance-parent
 * @author: liuhui
 * @version: 1.0
 * @since: JDK 1.8
 * @Date: 2020/8/27 10:41
 * Copyright (c) 2020, 96225.com.cn All Rights Reserved.
 */
@Slf4j
public class NettyClientHandler extends SimpleChannelInboundHandler<ResponseMsgPacket> {

    @Override
    protected void channelRead0(ChannelHandlerContext channelHandlerContext, ResponseMsgPacket responseMsgPacket) throws Exception {
        log.info("接收到来自服务端的响应消息,消息内容:{}", JSON.toJSONString(responseMsgPacket));

    }

    @Override
    public void userEventTriggered(ChannelHandlerContext ctx, Object evt) throws Exception {
        if (evt instanceof IdleStateEvent) {
            // 不管是读事件空闲还是写事件空闲都向服务器发送心跳包
            sendHeartbeatPacket(ctx);
        }
    }

    /**
     * 发送心跳包
     *
     * @param ctx
     */
    private void sendHeartbeatPacket(ChannelHandlerContext ctx) {
        HeartbeatRequestPacket heartbeatRequestPacket = new HeartbeatRequestPacket();
        ctx.writeAndFlush(heartbeatRequestPacket);
    }
}
