<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smk.common.dao.BankFileRecordMapper">
  <resultMap id="BaseResultMap" type="com.smk.common.model.BankFileRecord">
    
    <!-- 主键 -->
    <id column="ID" jdbcType="DECIMAL" property="id" />
    
    <!-- 产品编号 -->
    <result column="PRODUCT_ID" jdbcType="VARCHAR" property="productId" />
    
    <!-- 本地文件名称 -->
    <result column="LOCAL_FILE_NAME" jdbcType="VARCHAR" property="localFileName" />
    
    <!-- 本地文件路径 -->
    <result column="LOCAL_FILE_PATH" jdbcType="VARCHAR" property="localFilePath" />
    
    <!-- 下载状态 0：未下载 1：已下载 2:下载失败 -->
    <result column="DOWNLOAD_STS" jdbcType="CHAR" property="downloadSts" />
    
    <!-- 处理状态 0：未处理 1：已处理 2：处理失败 -->
    <result column="DEAL_STS" jdbcType="CHAR" property="dealSts" />
    
    <!-- 文件日期 -->
    <result column="FILE_DATE" jdbcType="DATE" property="fileDate" />
    
    <!-- 失败原因 -->
    <result column="FAIL_MSG" jdbcType="VARCHAR" property="failMsg" />
    
    <!-- 处理时间 -->
    <result column="DEAL_TIME" jdbcType="TIMESTAMP" property="dealTime" />
    
    <!-- 创建时间 -->
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    
    <!-- 返回码 -->
    <result column="RETURN_CODE" jdbcType="CHAR" property="returnCode" />
    
    <!-- 返回信息 -->
    <result column="RETURN_MSG" jdbcType="VARCHAR" property="returnMsg" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, PRODUCT_ID, LOCAL_FILE_NAME, LOCAL_FILE_PATH, DOWNLOAD_STS, DEAL_STS, FILE_DATE, 
    FAIL_MSG, DEAL_TIME, CREATE_TIME, RETURN_CODE, RETURN_MSG
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from BANK_FILE_RECORD
    where ID = #{id,jdbcType=DECIMAL}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from BANK_FILE_RECORD
    where ID = #{id,jdbcType=DECIMAL}
  </delete>

  <select id="selectInfoByNameAndFileDate" parameterType="map" resultMap="BaseResultMap">
    select * from BANK_FILE_RECORD where FILE_DATE = #{fileDate,jdbcType=DATE}
    and LOCAL_FILE_NAME in
    <foreach close=")" collection="files" item="localFileName" open="(" separator=",">
      #{localFileName}
    </foreach>
  </select>

  <select id="selectInfoByProductIdAndFileDate" parameterType="map" resultMap="BaseResultMap">
    select * from BANK_FILE_RECORD where FILE_DATE = #{fileDate,jdbcType=DATE}
    and PRODUCT_ID = #{productId,jdbcType=VARCHAR}
  </select>

  <update id="updateInfoByFileDate" parameterType="map">
    update BANK_FILE_RECORD set FAIL_MSG = #{failMsg,jdbcType=VARCHAR} where FILE_DATE = #{fileDate,jdbcType=DATE}
  </update>

  <select id="selectByFileName" parameterType="string" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from BANK_FILE_RECORD
    where LOCAL_FILE_NAME = #{localFileName,jdbcType=VARCHAR}
  </select>

  <insert id="insert">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT SEQ_BANK_FILE_RECORD.nextval AS ID FROM dual
    </selectKey>
    insert into BANK_FILE_RECORD (ID, PRODUCT_ID, LOCAL_FILE_NAME, 
      LOCAL_FILE_PATH, DOWNLOAD_STS, DEAL_STS, 
      FILE_DATE, FAIL_MSG, DEAL_TIME, 
      CREATE_TIME, RETURN_CODE, RETURN_MSG
      )
    values (#{id,jdbcType=DECIMAL}, #{productId,jdbcType=VARCHAR}, #{localFileName,jdbcType=VARCHAR}, 
      #{localFilePath,jdbcType=VARCHAR}, #{downloadSts,jdbcType=CHAR}, #{dealSts,jdbcType=CHAR}, 
      #{fileDate,jdbcType=DATE}, #{failMsg,jdbcType=VARCHAR}, #{dealTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{returnCode,jdbcType=CHAR}, #{returnMsg,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT SEQ_BANK_FILE_RECORD.nextval AS ID FROM dual
    </selectKey>
    insert into BANK_FILE_RECORD
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="productId != null">
        PRODUCT_ID,
      </if>
      <if test="localFileName != null">
        LOCAL_FILE_NAME,
      </if>
      <if test="localFilePath != null">
        LOCAL_FILE_PATH,
      </if>
      <if test="downloadSts != null">
        DOWNLOAD_STS,
      </if>
      <if test="dealSts != null">
        DEAL_STS,
      </if>
      <if test="fileDate != null">
        FILE_DATE,
      </if>
      <if test="failMsg != null">
        FAIL_MSG,
      </if>
      <if test="dealTime != null">
        DEAL_TIME,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="returnCode != null">
        RETURN_CODE,
      </if>
      <if test="returnMsg != null">
        RETURN_MSG,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=DECIMAL},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=VARCHAR},
      </if>
      <if test="localFileName != null">
        #{localFileName,jdbcType=VARCHAR},
      </if>
      <if test="localFilePath != null">
        #{localFilePath,jdbcType=VARCHAR},
      </if>
      <if test="downloadSts != null">
        #{downloadSts,jdbcType=CHAR},
      </if>
      <if test="dealSts != null">
        #{dealSts,jdbcType=CHAR},
      </if>
      <if test="fileDate != null">
        #{fileDate,jdbcType=DATE},
      </if>
      <if test="failMsg != null">
        #{failMsg,jdbcType=VARCHAR},
      </if>
      <if test="dealTime != null">
        #{dealTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="returnCode != null">
        #{returnCode,jdbcType=CHAR},
      </if>
      <if test="returnMsg != null">
        #{returnMsg,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective">
    update BANK_FILE_RECORD
    <set>
      <if test="productId != null">
        PRODUCT_ID = #{productId,jdbcType=VARCHAR},
      </if>
      <if test="localFileName != null">
        LOCAL_FILE_NAME = #{localFileName,jdbcType=VARCHAR},
      </if>
      <if test="localFilePath != null">
        LOCAL_FILE_PATH = #{localFilePath,jdbcType=VARCHAR},
      </if>
      <if test="downloadSts != null">
        DOWNLOAD_STS = #{downloadSts,jdbcType=CHAR},
      </if>
      <if test="dealSts != null">
        DEAL_STS = #{dealSts,jdbcType=CHAR},
      </if>
      <if test="fileDate != null">
        FILE_DATE = #{fileDate,jdbcType=DATE},
      </if>
      <if test="failMsg != null">
        FAIL_MSG = #{failMsg,jdbcType=VARCHAR},
      </if>
      <if test="dealTime != null">
        DEAL_TIME = #{dealTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="returnCode != null">
        RETURN_CODE = #{returnCode,jdbcType=CHAR},
      </if>
      <if test="returnMsg != null">
        RETURN_MSG = #{returnMsg,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey">
    update BANK_FILE_RECORD
    set PRODUCT_ID = #{productId,jdbcType=VARCHAR},
      LOCAL_FILE_NAME = #{localFileName,jdbcType=VARCHAR},
      LOCAL_FILE_PATH = #{localFilePath,jdbcType=VARCHAR},
      DOWNLOAD_STS = #{downloadSts,jdbcType=CHAR},
      DEAL_STS = #{dealSts,jdbcType=CHAR},
      FILE_DATE = #{fileDate,jdbcType=DATE},
      FAIL_MSG = #{failMsg,jdbcType=VARCHAR},
      DEAL_TIME = #{dealTime,jdbcType=TIMESTAMP},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      RETURN_CODE = #{returnCode,jdbcType=CHAR},
      RETURN_MSG = #{returnMsg,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <insert id="batchInsert" parameterType="java.util.List">
    insert into BANK_FILE_RECORD (
    ID,
    PRODUCT_ID,
    LOCAL_FILE_NAME,
    LOCAL_FILE_PATH,
    DOWNLOAD_STS,
    DEAL_STS,
    FILE_DATE,
    FAIL_MSG,
    DEAL_TIME,
    CREATE_TIME,
    RETURN_CODE,
    RETURN_MSG
    )
    select SEQ_BANK_FILE_RECORD.nextval, A.* from
    (
    <foreach collection="recordList" index="index" item="item" separator="union all">
      (
      select
      #{item.productId,jdbcType=VARCHAR},
      #{item.localFileName,jdbcType=VARCHAR},
      #{item.localFilePath,jdbcType=VARCHAR},
      #{item.downloadSts,jdbcType=CHAR},
      #{item.dealSts,jdbcType=CHAR},
      #{item.fileDate,jdbcType=DATE},
      #{item.failMsg,jdbcType=VARCHAR},
      #{item.dealTime,jdbcType=TIMESTAMP},
      #{item.createTime,jdbcType=TIMESTAMP},
      #{item.returnCode,jdbcType=CHAR},
      #{item.returnMsg,jdbcType=VARCHAR}
      from dual
      )
    </foreach>
    ) A
  </insert>
  
  <!-- ### 以上代码由MBG + CommentPlugin自动生成, 生成时间: 2020-03-16 13:50:41 ### -->



  <!-- Your codes goes here!!! -->
  
</mapper>