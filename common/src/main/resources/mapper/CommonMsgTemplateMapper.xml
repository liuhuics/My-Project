<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smk.common.dao.CommonMsgTemplateMapper">
  <resultMap id="BaseResultMap" type="com.smk.common.model.CommonMsgTemplate">
    
    <!-- 模板编号 -->
    <id column="MSG_ID" jdbcType="VARCHAR" property="msgId" />
    
    <!-- 模板类型 00 短信，01 邮件 02 站内信 -->
    <result column="MSG_TYPE" jdbcType="CHAR" property="msgType" />
    
    <!-- 标题 -->
    <result column="MSG_TITLE" jdbcType="VARCHAR" property="msgTitle" />
    
    <!-- 状态 0启用，1失效 -->
    <result column="STATUS" jdbcType="CHAR" property="status" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.smk.common.model.CommonMsgTemplate">
    
    <!-- 消息内容 -->
    <result column="MSG_CONTENT" jdbcType="CLOB" property="msgContent" />
  </resultMap>
  <sql id="Base_Column_List">
    MSG_ID, MSG_TYPE, MSG_TITLE, STATUS
  </sql>
  <sql id="Blob_Column_List">
    MSG_CONTENT
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from COMMON_MSG_TEMPLATE
    where MSG_ID = #{msgId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from COMMON_MSG_TEMPLATE
    where MSG_ID = #{msgId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert">
    insert into COMMON_MSG_TEMPLATE (MSG_ID, MSG_TYPE, MSG_TITLE, 
      STATUS, MSG_CONTENT)
    values (#{msgId,jdbcType=VARCHAR}, #{msgType,jdbcType=CHAR}, #{msgTitle,jdbcType=VARCHAR}, 
      #{status,jdbcType=CHAR}, #{msgContent,jdbcType=CLOB})
  </insert>
  <insert id="insertSelective">
    insert into COMMON_MSG_TEMPLATE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="msgId != null">
        MSG_ID,
      </if>
      <if test="msgType != null">
        MSG_TYPE,
      </if>
      <if test="msgTitle != null">
        MSG_TITLE,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="msgContent != null">
        MSG_CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="msgId != null">
        #{msgId,jdbcType=VARCHAR},
      </if>
      <if test="msgType != null">
        #{msgType,jdbcType=CHAR},
      </if>
      <if test="msgTitle != null">
        #{msgTitle,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="msgContent != null">
        #{msgContent,jdbcType=CLOB},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective">
    update COMMON_MSG_TEMPLATE
    <set>
      <if test="msgType != null">
        MSG_TYPE = #{msgType,jdbcType=CHAR},
      </if>
      <if test="msgTitle != null">
        MSG_TITLE = #{msgTitle,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=CHAR},
      </if>
      <if test="msgContent != null">
        MSG_CONTENT = #{msgContent,jdbcType=CLOB},
      </if>
    </set>
    where MSG_ID = #{msgId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs">
    update COMMON_MSG_TEMPLATE
    set MSG_TYPE = #{msgType,jdbcType=CHAR},
      MSG_TITLE = #{msgTitle,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=CHAR},
      MSG_CONTENT = #{msgContent,jdbcType=CLOB}
    where MSG_ID = #{msgId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey">
    update COMMON_MSG_TEMPLATE
    set MSG_TYPE = #{msgType,jdbcType=CHAR},
      MSG_TITLE = #{msgTitle,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=CHAR}
    where MSG_ID = #{msgId,jdbcType=VARCHAR}
  </update>
  <insert id="batchInsert" parameterType="java.util.List">
    insert into COMMON_MSG_TEMPLATE (
    MSG_ID,
    MSG_TYPE,
    MSG_TITLE,
    STATUS,
    MSG_CONTENT
    )
    (
    <foreach collection="recordList" index="index" item="item" separator="union all">
      (
      select
      #{item.msgId,jdbcType=VARCHAR},
      #{item.msgType,jdbcType=CHAR},
      #{item.msgTitle,jdbcType=VARCHAR},
      #{item.status,jdbcType=CHAR},
      #{item.msgContent,jdbcType=CLOB}
      from dual
      )
    </foreach>
    )
  </insert>
  
  <!-- ### 以上代码由MBG + CommentPlugin自动生成, 生成时间: 2020-03-20 14:46:10 ### -->



  <!-- Your codes goes here!!! -->
  
</mapper>